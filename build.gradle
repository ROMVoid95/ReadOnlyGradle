plugins {
	id 'eclipse'
	id 'idea'
	id 'groovy'
	id 'java-gradle-plugin'
	id 'java-library'
	id 'com.gradle.plugin-publish' version '0.12.0'
	id 'com.gradle.build-scan' version '1.16'
	id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.64"
}

import groovy.json.JsonSlurper

class Secrets {
	Map m_data = null

	final String getProperty(final String key) {
		return (m_data && (m_data[key] != null)) ? m_data[key] : ''
	}
}

final def secretFile
if (System.getenv('SECRET_FILE')) {
	secretFile = file System.getenv().SECRET_FILE
} else {
	secretFile = file 's.json'
}

import java.util.regex.Matcher

project.ext.secret = new Secrets()
if (secretFile.exists()) {
	secretFile.withReader {
		project.secret.m_data = new JsonSlurper().parse it
	}
}

version = project.VERSION
description = 'Gradle plugin apply ForgeGradle, CurseGradle and Galacticraft Dependencies'
archivesBaseName = 'ReadOnlyGradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
	shade
	compileOnly.extendsFrom shade
}

repositories {
	jcenter()
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
	maven {
		name = "forge"
		url = "http://files.minecraftforge.net/maven"
	}
}

dependencies {
	compile gradleApi()
	compile localGroovy()
	compile 'com.google.guava:guava:[24.1.1,)'
	shade 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	shade 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
	implementation 'se.bjurr.gitchangelog:git-changelog-lib:1.92'

	// Use JUnit test framework
	testCompile 'junit:junit:4.12'
}

[compileJava, compileGroovy].each {
	it.options.encoding = 'UTF-8'
	it.options.deprecation = true
	it.options.fork = true
}

gradlePlugin {
	plugins {
		readOnlyGradlePlugin {
			id = 'net.rom.readonlygradle'
			implementationClass = 'net.rom.readonlygradle.ReadOnlyGradlePlugin'
		}
	}
}

pluginBundle {
	website = 'https://github.com/ROMVoid95/ReadOnlyGradle'
	vcsUrl = 'https://github.com/ROMVoid95/ReadOnlyGradle'
	tags = [
		'minecraftforge',
		'curseforge',
		'minecraft',
		'forge',
		'galacticraft'
	]
	description = project.description

	plugins {
		readOnlyGradlePlugin {
			displayName = 'ReadOnlyGradle'
		}
	}
}

buildScan {
	termsOfServiceUrl = 'https://gradle.com/terms-of-service'
	termsOfServiceAgree = 'yes'
}

task gitChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
	file = new File('CHANGELOG.md')
	gitHubIssuePattern = "nonada123"
	templateContent = file('changelog.mustache').getText('UTF-8')
}

apply from: 'task/publish.gradle'